{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\param\\\\OneDrive\\\\Desktop\\\\nodemongodbdocker\\\\frontend\\\\src\\\\components\\\\goals\\\\GoalInput.js\",\n    _s = $RefreshSig$();\n\n//this file for getting goals input text and creating id for that\nimport React, { useState } from 'react';\nimport './GoalInput.css';\nimport Card from '../UI/Card'; // Parent component used\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GoalInput(props) {\n  _s();\n\n  const [enteredGoalText, setEnteredGoalText] = useState(''); //[currentstate,updatingState]\n\n  function updateGoalTextHandler(event) {\n    //getting input value from \"event\"\n    setEnteredGoalText(event.target.value);\n  } //Here we create a state variable (enteredGoalText) to track the input value.\n  // By setting an onChange event handler, the handler function will get called whenever the text in the input field changes.\n\n\n  function goalSubmitHandler(event) {\n    //gaol submit handler listen event from entering goal text\n    event.preventDefault(); //The preventDefault() method cancels the event if it is cancelable, meaning that the default action that belongs to the event will not occur. \n    //For example, this can be useful when: Clicking on a \"Submit\" button, prevent it from submitting a form.\n\n    if (enteredGoalText.trim().length === 0) {\n      alert('Invalid text - please enter a longer one!');\n      return;\n    }\n\n    props.onAddGoal(enteredGoalText); //on adding entered goal text\n\n    setEnteredGoalText(''); //for updating entered goal text by calling function (setEnteredGoalText handler)\n  } //For creating new goal\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"goal-input\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: goalSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"New Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"text\",\n          value: enteredGoalText //existing current state\n          ,\n          onChange: updateGoalTextHandler //updating input state variable\n          //The onchange event occurs when the value of an HTML element is changed.\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n} // child elements are passing into card tag(child elements passing into that component)\n\n\n_s(GoalInput, \"4v9T1eHm2y44xlt3NrcxWMHVj28=\");\n\n_c = GoalInput;\nexport default GoalInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoalInput\");","map":{"version":3,"names":["React","useState","Card","GoalInput","props","enteredGoalText","setEnteredGoalText","updateGoalTextHandler","event","target","value","goalSubmitHandler","preventDefault","trim","length","alert","onAddGoal"],"sources":["C:/Users/param/OneDrive/Desktop/nodemongodbdocker/frontend/src/components/goals/GoalInput.js"],"sourcesContent":["//this file for getting goals input text and creating id for that\nimport React, { useState } from 'react';\n\nimport './GoalInput.css';\nimport Card from '../UI/Card';// Parent component used\n\nfunction GoalInput(props) {\n  const [enteredGoalText, setEnteredGoalText] = useState('');//[currentstate,updatingState]\n\n  function updateGoalTextHandler(event) {\n    //getting input value from \"event\"\n    setEnteredGoalText(event.target.value);\n  }\n  \n  //Here we create a state variable (enteredGoalText) to track the input value.\n  // By setting an onChange event handler, the handler function will get called whenever the text in the input field changes.\n\n  function goalSubmitHandler(event) {\n    //gaol submit handler listen event from entering goal text\n    event.preventDefault();\n    //The preventDefault() method cancels the event if it is cancelable, meaning that the default action that belongs to the event will not occur. \n    //For example, this can be useful when: Clicking on a \"Submit\" button, prevent it from submitting a form.\n\n    if (enteredGoalText.trim().length === 0) {\n      alert('Invalid text - please enter a longer one!');\n      return;\n    }\n\n    props.onAddGoal(enteredGoalText);\n    //on adding entered goal text\n\n    setEnteredGoalText('');\n    //for updating entered goal text by calling function (setEnteredGoalText handler)\n  }\n//For creating new goal\n  return (\n    <section id='goal-input'>\n      <Card>\n        <form onSubmit={goalSubmitHandler}>\n          <label htmlFor='text'>New Goal</label>\n          <input\n            type='text'\n            id='text'\n            value={enteredGoalText}\n            //existing current state\n            onChange={updateGoalTextHandler}\n            //updating input state variable\n            //The onchange event occurs when the value of an HTML element is changed.\n          />\n          <button>Add Goal</button>\n        </form>\n      </Card>\n    </section>\n  );\n}\n// child elements are passing into card tag(child elements passing into that component)\n\nexport default GoalInput;\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,iBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB,C,CAA8B;;;;AAE9B,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EAAA;;EACxB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,EAAD,CAAtD,CADwB,CACmC;;EAE3D,SAASM,qBAAT,CAA+BC,KAA/B,EAAsC;IACpC;IACAF,kBAAkB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;EACD,CANuB,CAQxB;EACA;;;EAEA,SAASC,iBAAT,CAA2BH,KAA3B,EAAkC;IAChC;IACAA,KAAK,CAACI,cAAN,GAFgC,CAGhC;IACA;;IAEA,IAAIP,eAAe,CAACQ,IAAhB,GAAuBC,MAAvB,KAAkC,CAAtC,EAAyC;MACvCC,KAAK,CAAC,2CAAD,CAAL;MACA;IACD;;IAEDX,KAAK,CAACY,SAAN,CAAgBX,eAAhB,EAXgC,CAYhC;;IAEAC,kBAAkB,CAAC,EAAD,CAAlB,CAdgC,CAehC;EACD,CA3BuB,CA4B1B;;;EACE,oBACE;IAAS,EAAE,EAAC,YAAZ;IAAA,uBACE,QAAC,IAAD;MAAA,uBACE;QAAM,QAAQ,EAAEK,iBAAhB;QAAA,wBACE;UAAO,OAAO,EAAC,MAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,MADP;UAEE,EAAE,EAAC,MAFL;UAGE,KAAK,EAAEN,eAHT,CAIE;UAJF;UAKE,QAAQ,EAAEE,qBALZ,CAME;UACA;;QAPF;UAAA;UAAA;UAAA;QAAA,QAFF,eAWE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAXF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,C,CACD;;;GAjDSJ,S;;KAAAA,S;AAmDT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}